//

options {

  JDK_VERSION = "1.5";
  DEBUG_PARSER = false;
  DEBUG_TOKEN_MANAGER = false;

}

PARSER_BEGIN(Analex)

package Compilador;

import java.io.*;

public class Analex {

   public static void main(String args[])  throws ParseException  {

      try {

         Analex x = new Analex(new FileInputStream("exemplo1.anlex"));
         x.S();

      }

      catch(FileNotFoundException e) {

         System.out.println("Arquivo não encontrado");

      }

   }

}

PARSER_END(Analex)

 

SKIP : { " " | "\t" | "\r" | "\n" }

 

SKIP : {

   "/*" : comentario-teste

}

<comentario> SKIP: {

   "*/" : DEFAULT |

   <~[]>

}

 

TOKEN [IGNORE_CASE] : {

  < BREAK: "break" >

} 

 

TOKEN : {

  < IDENT: "_"(["a"-"z","A"-"Z","_","0"-"9"] )* > |

  < INT:  (["0"-"9"])+("L"|"l")? >

}

 

TOKEN: {

  < VOGAIS: (["a","e","i","o","u"]){3} > |

  < ARQ:    "\""

            ((~[".", ":", ";", "\\"]) {1,8}

            ( "." (~[".", ":", ";", "\\"]){1,3})?)

            "\"" >

}

 

JAVACODE void S()
{

   Token t;
   do {
      t = getNextToken();
      System.out.println(tokenImage[t.kind]+"\t"+t.image);
   }

   while(t.kind != EOF);
}